{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport sampleIcon from '../../assets/images/default.png';\nimport { fetchApiData, storeApiData } from \"../../api/api\";\nconst CompanyApplierItem = ({\n  index,\n  id,\n  title,\n  description,\n  document,\n  status,\n  applicationDate,\n  profile,\n  company,\n  job\n}) => {\n  /*\r\n  const [dropdownState, setDropdownState] = useState(false)\r\n  const [doRefresh, setDoRefresh] = useState(false)\r\n    const toggleDropdown = () => {\r\n      // let dropdowns = document.getElementsByClassName('company_job__wrapper__card--right__dropdown');\r\n      // for (let i = 0; i < dropdowns.length; i++) {\r\n      //     dropdowns.item(i).style.display = 'none';\r\n      //     console.log(dropdowns.item(i).dropdownState);\r\n      // }\r\n        let dropdown = document.getElementsByClassName('company_job__wrapper__card--right__dropdown')[index];\r\n      if (dropdownState) {\r\n          dropdown.style.display = 'none';\r\n      }else {\r\n          dropdown.style.display = 'block';\r\n      }\r\n        //1 - 0\r\n      //2 - 1\r\n        // console.log(index)\r\n        setDropdownState(!dropdownState);\r\n        // console.log(dropdownState)\r\n  }\r\n    const jobDeleteHandler = async () => {\r\n      await storeApiData(`companyDeleteJob/${company_id}/${id}`)\r\n      .then((response) => console.log(response))\r\n      .then(setDoRefresh(!doRefresh))\r\n      .catch((response) => console.log(response))\r\n  }\r\n    useEffect(() => {\r\n      if (doRefresh) {\r\n          setTimeout(() => {\r\n              window.location.reload()\r\n              setDoRefresh(!doRefresh)\r\n          }, 2000)\r\n      }\r\n    }, [doRefresh])\r\n    // console.log(company_id)\r\n    //Edit Job\r\n  const closeModal = () => {\r\n      let modal = document.getElementsByClassName('child-modal')[index];\r\n      modal.style.display = 'none';\r\n  \r\n      setJobTitle('')\r\n      setJobTag('')\r\n      setJobCount('')\r\n      setJobCloseDate('')\r\n      setJobSalary('')\r\n      setJobDescription('')\r\n      setJobCategory('')\r\n      setJobType('')\r\n  }\r\n    const applyJobChanges = () => {\r\n      const editJob = async () => {\r\n          await storeApiData(`companyEditJob/${company_id}/${id}`, { jobTitle, jobCount, jobTag, jobSalary, jobCloseDate, jobCategory, jobDescription, jobType })\r\n          .then((response)=>console.log(response.data))\r\n          .catch((response)=>console.log(response.data))\r\n      }\r\n        editJob()\r\n      closeModal()\r\n  }\r\n    const openModal = () => {\r\n      const insertJobData = async () => {\r\n          const formatDate = (dateString) => {\r\n              const [datePart] = dateString.split(' ')\r\n              const [year, month, day] = datePart.split('-')\r\n              return `${year}-${month}-${day}`\r\n          }\r\n            setJobTitle(title)\r\n          setJobTag(tag)\r\n          setJobCount(count)\r\n          setJobSalary(salary)\r\n          setJobCloseDate(formatDate(closeDate))\r\n          setJobDescription(description)\r\n          setJobType(type)\r\n            console.log(formatDate(closeDate))\r\n            if (category == null) return\r\n          // setJobCategory(category[cat_id-1].name)\r\n          setJobCategory(cat_id)\r\n      }\r\n        const showModal = () => {\r\n          let modal = document.getElementsByClassName('child-modal')[index];\r\n          modal.style.display = 'block';\r\n      }\r\n        insertJobData()\r\n      showModal()\r\n  }\r\n    const [jobTitle, setJobTitle] = useState(title)\r\n  const [jobTag, setJobTag] = useState('')\r\n  const [jobCount, setJobCount] = useState('')\r\n  const [jobSalary, setJobSalary] = useState('')\r\n  const [jobCloseDate, setJobCloseDate] = useState('')\r\n  const [jobDescription, setJobDescription] = useState('')\r\n  const [jobStatus, setJobStatus] = useState('active');\r\n  const [jobType, setJobType] = useState('full time');\r\n  const [jobCategory, setJobCategory] = useState('');\r\n    return (\r\n      // <div className=\"job__wrapper__card\">\r\n      //     <div className=\"job__wrapper__card--left\">\r\n      //         <img src={ icon } alt=\"icon\" />\r\n      //     </div>\r\n      //     <div className=\"job__wrapper__card--line\"></div>\r\n      //     <div className=\"job__wrapper__card--right\">\r\n      //         <div className=\"job__wrapper__card--right__part-1\">\r\n      //             <h1>{title}</h1>\r\n      //             <p>{company}</p>\r\n      //             <Link className={type === \"full time\" ? \"full-time\" : \"half-time\"} to={`/job-details/${slug}`}>{type}</Link>\r\n      //         </div>\r\n      //         <div className=\"job__wrapper__card--right__part-2\">\r\n      //             <i className=\"fa fa-heart-o\"></i>\r\n      //         </div>\r\n      //     </div>\r\n      // </div>\r\n      <section>\r\n          <div className=\"company_job__wrapper__card\">\r\n              <div className=\"company_job__wrapper__card--left\">\r\n                  <img src={ icon } alt=\"icon\" />\r\n              </div>\r\n              <div className=\"company_job__wrapper__card--line\"></div>\r\n              <div className=\"company_job__wrapper__card--right\">\r\n                  <div className=\"company_job__wrapper__card--right__part-1\">\r\n                      <h1>{title}</h1>\r\n                      <p>{company}</p>\r\n                      <Link className={type === \"full time\" ? \"full-time\" : \"half-time\"} to={`/job-details/${slug}`}>{type}</Link>\r\n                  </div>\r\n                  <div className=\"company_job__wrapper__card--right__part-2\">\r\n                      <i className=\"fa fa-caret-down\" onClick={toggleDropdown}></i>\r\n                  </div>\r\n                  <ul className=\"company_job__wrapper__card--right__dropdown\">\r\n                      <li>\r\n                          <button type=\"button\" onClick={openModal}  className=\"company_job__wrapper__card--right__dropdown_item\"><i className=\"fa fa-pencil fa-fw\"></i><span>Edit</span></button>\r\n                      </li>\r\n                      <li>\r\n                          <button type=\"button\" onClick={jobDeleteHandler} className=\"company_job__wrapper__card--right__dropdown_item\"><i className=\"fa fa-trash-o fa-fw\"></i><span>Delete</span></button>\r\n                      </li>\r\n                  </ul>\r\n              </div>\r\n          </div>\r\n            <div className=\"child-modal\">\r\n              <div className=\"modal-container\">\r\n                 <div className=\"photo\">\r\n                      <img src={sampleIcon} alt=\"sample\" />\r\n                  </div>\r\n                  <form>\r\n                      <div className=\"form\">\r\n                          <div className='form-row'>\r\n                              <label htmlFor=\"title\">Title: </label>\r\n                              <input type=\"text\" className='form-control' name=\"title\" placeholder='Job Title' value={jobTitle} onChange={(e) => setJobTitle(e.target.value)}/>\r\n                          </div>\r\n                          <div className='form-row'>\r\n                              <label htmlFor=\"tag\">Tag: </label>\r\n                              <input type=\"text\" className='form-control' name=\"tag\" placeholder='Job Tag' value={jobTag} onChange={(e) => setJobTag(e.target.value)}/>\r\n                          </div>\r\n                          <div className='form-row'>\r\n                              <label htmlFor=\"count\">Count: </label>\r\n                              <input type=\"number\" className='form-control' name=\"count\"  placeholder='People Needed' value={jobCount} onChange={(e) => setJobCount(e.target.value)}/>\r\n                          </div>\r\n                          <div className='form-row'>\r\n                              <label htmlFor=\"salary\">Salary: </label>\r\n                              <input type=\"text\" className='form-control' name=\"salary\" placeholder='Job Salary' value={jobSalary} onChange={(e) => setJobSalary(e.target.value)}/>\r\n                          </div>\r\n                          <div className='form-row'>\r\n                              <label htmlFor=\"close_date\">Close Date: </label>\r\n                              <input type=\"date\" className='form-control' name=\"close_date\" placeholder='close date' value={jobCloseDate} onChange={(e) => setJobCloseDate(e.target.value)}/>\r\n                          </div>\r\n                          <div className='form-row'>\r\n                              <label htmlFor=\"description\">Description: </label>\r\n                              <input type=\"text\" className='form-control' name=\"address\" placeholder='Job Description' value={jobDescription} onChange={(e) => setJobDescription(e.target.value)}/>\r\n                          </div>\r\n                          <div className='form-row'>\r\n                              <label htmlFor=\"category\">Category: </label>\r\n                              <select className='form-control' value={jobCategory} onChange={(e)=>setJobCategory(e.target.value)}>\r\n                                  <option value=''>Select an Option</option>\r\n                                  {\r\n                                      // category.map((item) => (\r\n                                      //     <option key={item.id} value={item.name}>{item.name}</option>\r\n                                      // ))\r\n                                      category.map((item) => (\r\n                                          <option key={item.id} value={item.id}>{item.name}</option>\r\n                                      ))\r\n                                      // reamData.map(item => {\r\n                                      //     <option key={item.id} value={item.name}>{item.name}</option>\r\n                                      // })\r\n                                  }\r\n                              </select>\r\n                          </div>\r\n                          <div className='form-row'>\r\n                              <label htmlFor=\"type\">Type: </label>\r\n                              <select className='form-control' value={jobType} onChange={(e)=>setJobType(e.target.value)}>\r\n                                  <option value='full time'>full time</option>\r\n                                  <option value='part time'>part time</option>\r\n                                  <option value='half time'>half time</option>\r\n                              </select>\r\n                          </div>\r\n                          <div className='button-div'>\r\n                              <button type='button' className=\"button\" onClick={applyJobChanges}>\r\n                                  <div>\r\n                                      {/* <img src='' alt='' height='15px' width='15px'/> }\r\n                                      /*<span>Apply Changes</span>\r\n                                  </div>\r\n                              </button>\r\n                              <button type='button' onClick={closeModal} className=\"button button-cancel\">\r\n                                  <div>\r\n                                      {/* <img src='' alt='' height='15px' width='15px'/> }\r\n                                      /*<span>Cancel</span>\r\n                                  </div>\r\n                              </button>\r\n                          </div>\r\n                      </div>\r\n                  </form>\r\n              </div>\r\n          </div>\r\n      </section>\r\n  )*/\n};\n_c = CompanyApplierItem;\nexport default CompanyApplierItem;\nvar _c;\n$RefreshReg$(_c, \"CompanyApplierItem\");","map":{"version":3,"names":["React","useEffect","useState","Link","sampleIcon","fetchApiData","storeApiData","CompanyApplierItem","index","id","title","description","document","status","applicationDate","profile","company","job","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/RECRUIT_MANAGEMENT/rms-react/src/components/company/CompanyApplierItem.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport sampleIcon from '../../assets/images/default.png'\r\nimport { fetchApiData, storeApiData } from \"../../api/api\";\r\n\r\nconst CompanyApplierItem = ({index, id, title, description, document, status, applicationDate, profile, company, job}) => {\r\n    /*\r\n    const [dropdownState, setDropdownState] = useState(false)\r\n    const [doRefresh, setDoRefresh] = useState(false)\r\n\r\n    const toggleDropdown = () => {\r\n        // let dropdowns = document.getElementsByClassName('company_job__wrapper__card--right__dropdown');\r\n        // for (let i = 0; i < dropdowns.length; i++) {\r\n        //     dropdowns.item(i).style.display = 'none';\r\n        //     console.log(dropdowns.item(i).dropdownState);\r\n        // }\r\n\r\n        let dropdown = document.getElementsByClassName('company_job__wrapper__card--right__dropdown')[index];\r\n        if (dropdownState) {\r\n            dropdown.style.display = 'none';\r\n        }else {\r\n            dropdown.style.display = 'block';\r\n        }\r\n\r\n        //1 - 0\r\n        //2 - 1\r\n\r\n        // console.log(index)\r\n\r\n        setDropdownState(!dropdownState);\r\n\r\n        // console.log(dropdownState)\r\n    }\r\n\r\n    const jobDeleteHandler = async () => {\r\n        await storeApiData(`companyDeleteJob/${company_id}/${id}`)\r\n        .then((response) => console.log(response))\r\n        .then(setDoRefresh(!doRefresh))\r\n        .catch((response) => console.log(response))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (doRefresh) {\r\n            setTimeout(() => {\r\n                window.location.reload()\r\n                setDoRefresh(!doRefresh)\r\n            }, 2000)\r\n        }\r\n\r\n    }, [doRefresh])\r\n\r\n    // console.log(company_id)\r\n\r\n    //Edit Job\r\n    const closeModal = () => {\r\n        let modal = document.getElementsByClassName('child-modal')[index];\r\n        modal.style.display = 'none';\r\n    \r\n        setJobTitle('')\r\n        setJobTag('')\r\n        setJobCount('')\r\n        setJobCloseDate('')\r\n        setJobSalary('')\r\n        setJobDescription('')\r\n        setJobCategory('')\r\n        setJobType('')\r\n    }\r\n\r\n    const applyJobChanges = () => {\r\n        const editJob = async () => {\r\n            await storeApiData(`companyEditJob/${company_id}/${id}`, { jobTitle, jobCount, jobTag, jobSalary, jobCloseDate, jobCategory, jobDescription, jobType })\r\n            .then((response)=>console.log(response.data))\r\n            .catch((response)=>console.log(response.data))\r\n        }\r\n\r\n        editJob()\r\n        closeModal()\r\n    }\r\n\r\n    const openModal = () => {\r\n        const insertJobData = async () => {\r\n            const formatDate = (dateString) => {\r\n                const [datePart] = dateString.split(' ')\r\n                const [year, month, day] = datePart.split('-')\r\n                return `${year}-${month}-${day}`\r\n            }\r\n\r\n            setJobTitle(title)\r\n            setJobTag(tag)\r\n            setJobCount(count)\r\n            setJobSalary(salary)\r\n            setJobCloseDate(formatDate(closeDate))\r\n            setJobDescription(description)\r\n            setJobType(type)\r\n\r\n            console.log(formatDate(closeDate))\r\n\r\n            if (category == null) return\r\n            // setJobCategory(category[cat_id-1].name)\r\n            setJobCategory(cat_id)\r\n        }\r\n\r\n        const showModal = () => {\r\n            let modal = document.getElementsByClassName('child-modal')[index];\r\n            modal.style.display = 'block';\r\n        }\r\n\r\n        insertJobData()\r\n        showModal()\r\n    }\r\n\r\n    const [jobTitle, setJobTitle] = useState(title)\r\n    const [jobTag, setJobTag] = useState('')\r\n    const [jobCount, setJobCount] = useState('')\r\n    const [jobSalary, setJobSalary] = useState('')\r\n    const [jobCloseDate, setJobCloseDate] = useState('')\r\n    const [jobDescription, setJobDescription] = useState('')\r\n    const [jobStatus, setJobStatus] = useState('active');\r\n    const [jobType, setJobType] = useState('full time');\r\n    const [jobCategory, setJobCategory] = useState('');\r\n\r\n    return (\r\n        // <div className=\"job__wrapper__card\">\r\n        //     <div className=\"job__wrapper__card--left\">\r\n        //         <img src={ icon } alt=\"icon\" />\r\n        //     </div>\r\n        //     <div className=\"job__wrapper__card--line\"></div>\r\n        //     <div className=\"job__wrapper__card--right\">\r\n        //         <div className=\"job__wrapper__card--right__part-1\">\r\n        //             <h1>{title}</h1>\r\n        //             <p>{company}</p>\r\n        //             <Link className={type === \"full time\" ? \"full-time\" : \"half-time\"} to={`/job-details/${slug}`}>{type}</Link>\r\n        //         </div>\r\n        //         <div className=\"job__wrapper__card--right__part-2\">\r\n        //             <i className=\"fa fa-heart-o\"></i>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n        <section>\r\n            <div className=\"company_job__wrapper__card\">\r\n                <div className=\"company_job__wrapper__card--left\">\r\n                    <img src={ icon } alt=\"icon\" />\r\n                </div>\r\n                <div className=\"company_job__wrapper__card--line\"></div>\r\n                <div className=\"company_job__wrapper__card--right\">\r\n                    <div className=\"company_job__wrapper__card--right__part-1\">\r\n                        <h1>{title}</h1>\r\n                        <p>{company}</p>\r\n                        <Link className={type === \"full time\" ? \"full-time\" : \"half-time\"} to={`/job-details/${slug}`}>{type}</Link>\r\n                    </div>\r\n                    <div className=\"company_job__wrapper__card--right__part-2\">\r\n                        <i className=\"fa fa-caret-down\" onClick={toggleDropdown}></i>\r\n                    </div>\r\n                    <ul className=\"company_job__wrapper__card--right__dropdown\">\r\n                        <li>\r\n                            <button type=\"button\" onClick={openModal}  className=\"company_job__wrapper__card--right__dropdown_item\"><i className=\"fa fa-pencil fa-fw\"></i><span>Edit</span></button>\r\n                        </li>\r\n                        <li>\r\n                            <button type=\"button\" onClick={jobDeleteHandler} className=\"company_job__wrapper__card--right__dropdown_item\"><i className=\"fa fa-trash-o fa-fw\"></i><span>Delete</span></button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"child-modal\">\r\n                <div className=\"modal-container\">\r\n                   <div className=\"photo\">\r\n                        <img src={sampleIcon} alt=\"sample\" />\r\n                    </div>\r\n                    <form>\r\n                        <div className=\"form\">\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"title\">Title: </label>\r\n                                <input type=\"text\" className='form-control' name=\"title\" placeholder='Job Title' value={jobTitle} onChange={(e) => setJobTitle(e.target.value)}/>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"tag\">Tag: </label>\r\n                                <input type=\"text\" className='form-control' name=\"tag\" placeholder='Job Tag' value={jobTag} onChange={(e) => setJobTag(e.target.value)}/>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"count\">Count: </label>\r\n                                <input type=\"number\" className='form-control' name=\"count\"  placeholder='People Needed' value={jobCount} onChange={(e) => setJobCount(e.target.value)}/>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"salary\">Salary: </label>\r\n                                <input type=\"text\" className='form-control' name=\"salary\" placeholder='Job Salary' value={jobSalary} onChange={(e) => setJobSalary(e.target.value)}/>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"close_date\">Close Date: </label>\r\n                                <input type=\"date\" className='form-control' name=\"close_date\" placeholder='close date' value={jobCloseDate} onChange={(e) => setJobCloseDate(e.target.value)}/>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"description\">Description: </label>\r\n                                <input type=\"text\" className='form-control' name=\"address\" placeholder='Job Description' value={jobDescription} onChange={(e) => setJobDescription(e.target.value)}/>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"category\">Category: </label>\r\n                                <select className='form-control' value={jobCategory} onChange={(e)=>setJobCategory(e.target.value)}>\r\n                                    <option value=''>Select an Option</option>\r\n                                    {\r\n                                        // category.map((item) => (\r\n                                        //     <option key={item.id} value={item.name}>{item.name}</option>\r\n                                        // ))\r\n                                        category.map((item) => (\r\n                                            <option key={item.id} value={item.id}>{item.name}</option>\r\n                                        ))\r\n                                        // reamData.map(item => {\r\n                                        //     <option key={item.id} value={item.name}>{item.name}</option>\r\n                                        // })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"type\">Type: </label>\r\n                                <select className='form-control' value={jobType} onChange={(e)=>setJobType(e.target.value)}>\r\n                                    <option value='full time'>full time</option>\r\n                                    <option value='part time'>part time</option>\r\n                                    <option value='half time'>half time</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='button-div'>\r\n                                <button type='button' className=\"button\" onClick={applyJobChanges}>\r\n                                    <div>\r\n                                        {/* <img src='' alt='' height='15px' width='15px'/> }\r\n                                        /*<span>Apply Changes</span>\r\n                                    </div>\r\n                                </button>\r\n                                <button type='button' onClick={closeModal} className=\"button button-cancel\">\r\n                                    <div>\r\n                                        {/* <img src='' alt='' height='15px' width='15px'/> }\r\n                                        /*<span>Cancel</span>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )*/\r\n}\r\nexport default CompanyApplierItem"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,UAAU,MAAM,iCAAiC;AACxD,SAASC,YAAY,EAAEC,YAAY,QAAQ,eAAe;AAE1D,MAAMC,kBAAkB,GAAGA,CAAC;EAACC,KAAK;EAAEC,EAAE;EAAEC,KAAK;EAAEC,WAAW;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,eAAe;EAAEC,OAAO;EAAEC,OAAO;EAAEC;AAAG,CAAC,KAAK;EACtnNI,CA0OH;AAAAC,EAAA,GA3OKX,kBAAkB;AA4OxB,eAAeA,kBAAkB;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}