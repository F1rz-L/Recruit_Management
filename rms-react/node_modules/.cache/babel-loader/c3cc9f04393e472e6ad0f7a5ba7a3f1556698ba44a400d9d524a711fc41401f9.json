{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\RECRUIT_MANAGEMENT\\\\rms-react\\\\src\\\\components\\\\admin\\\\AdminJob\\\\AdminCustomJob.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport sampleIcon from '../../../assets/images/default.png';\nimport AdminJobItem from '../AdminJob/AdminJobItem';\nimport { fetchApiData, storeApiData } from \"../../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst openModal = () => {\n  let modal = document.getElementsByClassName('modal-job')[0];\n  modal.style.display = 'block';\n};\nconst closeModal = () => {\n  let modal = document.getElementsByClassName('modal-job')[0];\n  modal.style.display = 'none';\n};\nconst AdminCustomJob = () => {\n  _s();\n  const [type, setType] = useState('full time');\n  const [category, setCategory] = useState('');\n  const [categoryData, setCategoryData] = useState([]);\n  const [companyData, setCompanyData] = useState([]);\n  const iniateData = async () => {\n    // const getCategory = async () => {\n    //     await fetchApiData(`loadCategory`)\n    //     .then((response) => console.log(response.data.category))\n    //     .then((response) => setCategoryData(response.data.category))\n    //     .catch((response) => console.log(response))\n    // }\n\n    // const getCompany = async () => {\n    //     await fetchApiData(`loadCompany`)\n    //     .then((response) => console.log(response.data.company))\n    //     .then((response) => setCompanyData(response.data.company))\n    //     .catch((response) => console.log(response))\n    // }\n    const getCategory = async () => {\n      const categoryResponse = await fetchApiData(`loadCategory`);\n      setCategoryData(categoryResponse.data.category);\n    };\n    const getCompany = async () => {\n      const companyResponse = await fetchApiData(`loadCompany`);\n      setCompanyData(companyResponse.data.company);\n    };\n    getCategory();\n    getCompany();\n  };\n  useEffect(() => {\n    iniateData();\n  }, []);\n  const [company_id, setCompany_id] = useState('');\n  const [category_id, setCategory_id] = useState('');\n  const [jobTitle, setJobTitle] = useState('');\n  const [jobCloseDate, setJobCloseDate] = useState('');\n  const [jobType, setJobType] = useState('');\n  const [jobCount, setJobCount] = useState('');\n  const [jobTag, setJobTag] = useState('');\n  const [jobSalary, setJobSalary] = useState('');\n  const [jobDescription, setJobDescription] = useState('');\n  const [jobStatus, setJobStatus] = useState('active');\n  const postJob = () => {\n    const createJob = async () => {\n      await storeApiData(`adminCreateJob`, {\n        company_id,\n        category_id,\n        jobTitle,\n        jobCloseDate,\n        jobType,\n        jobCount,\n        jobTag,\n        jobSalary,\n        jobDescription,\n        jobStatus\n      }).then(response => console.log(response.data)).catch(response => console.log(response.data));\n    };\n    createJob();\n    closeModal();\n  };\n  const [fetchState, setFetchState] = useState(true);\n  const [jobData, setJobData] = useState([]);\n  const [newJobDataFormat, setNewJobDataFormat] = useState([]);\n  const [toLoadData, setToLoadData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const fetchJob = async () => {\n    const response = await fetchApiData(`loadJob`);\n    setJobData(response.data.job);\n  };\n  useEffect(() => {\n    setFetchState(false);\n    fetchJob();\n    // iniateData()\n    // console.log(jobData)\n  }, [fetchState]);\n  function formatJobData() {\n    let otherTempJobData = [];\n    let displayCount = 4;\n    let totalPage = Math.ceil(jobData.length / displayCount);\n    let page = 0;\n    for (page; page < totalPage; page++) {\n      let leftFlag = page * displayCount;\n      let rightFlag = leftFlag + displayCount;\n      let tempJob = [];\n      let tempJobLength = 0;\n      for (leftFlag; leftFlag < rightFlag; leftFlag++) {\n        if (jobData[leftFlag] != null) {\n          tempJob[tempJobLength] = jobData[leftFlag];\n          ++tempJobLength;\n        }\n      }\n      otherTempJobData[page] = tempJob;\n    }\n    setNewJobDataFormat(otherTempJobData);\n  }\n  useEffect(() => {\n    formatJobData();\n    // console.log(newJobDataFormat)\n    // console.log(\"a\")\n  }, [jobData]);\n  function movePage() {\n    setToLoadData(newJobDataFormat[currentPage - 1]);\n    // console.log(toLoadData)\n  }\n  useEffect(() => {\n    movePage();\n    // console.log(currentPage)\n    // console.log(toLoadData)\n  }, [jobData, currentPage]);\n\n  // console.log(currentPage)\n  // console.log(toLoadData)\n\n  // function calculateToLoadData() {\n  //     // setToLoadData(jobData[1], jobData[2]);\n  //     setToLoadData(Array.prototype.concat(jobData[0], jobData[1], jobData[2], jobData[3]))\n  // }\n\n  // useEffect(() => {\n  //     calculateToLoadData()\n  //     console.log(toLoadData)\n  // }, [jobData])\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"admin\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-div\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: openModal,\n              className: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add Job\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job__wrapper\",\n          children: toLoadData && toLoadData.map((item, i) => /*#__PURE__*/_jsxDEV(AdminJobItem, {\n            index: i,\n            id: item.id,\n            title: item.title,\n            type: item.type,\n            slug: item.slug,\n            icon: item.icon,\n            status: item.status,\n            company: item.company[0]\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page__wrapper\",\n          children: newJobDataFormat && newJobDataFormat.map((item, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            value: i + 1,\n            onClick: e => setCurrentPage(e.target.value),\n            children: i + 1\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal modal-job\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: sampleIcon,\n            alt: \"sample\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"company\",\n                children: \"Company: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                value: company_id,\n                onChange: e => setCompany_id(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select an Option\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 37\n                }, this), companyData && companyData.map((item, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item.id,\n                  children: item.name\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 45\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"title\",\n                children: \"Title: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: jobTitle,\n                onChange: e => setJobTitle(e.target.value),\n                className: \"form-control\",\n                name: \"title\",\n                placeholder: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"tag\",\n                children: \"Tag: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: jobTag,\n                onChange: e => setJobTag(e.target.value),\n                className: \"form-control\",\n                name: \"tag\",\n                placeholder: \"Job Tag\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"count\",\n                children: \"Count: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: jobCount,\n                onChange: e => setJobCount(e.target.value),\n                className: \"form-control\",\n                name: \"count\",\n                placeholder: \"People Needed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"salary\",\n                children: \"Salary: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: jobSalary,\n                onChange: e => setJobSalary(e.target.value),\n                className: \"form-control\",\n                name: \"salary\",\n                placeholder: \"Job Salary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"close_date\",\n                children: \"Close Date: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: jobCloseDate,\n                onChange: e => setJobCloseDate(e.target.value),\n                className: \"form-control\",\n                name: \"close_date\",\n                placeholder: \"close date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"description\",\n                children: \"Description: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: jobDescription,\n                onChange: e => setJobDescription(e.target.value),\n                className: \"form-control\",\n                name: \"address\",\n                placeholder: \"Job Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"category\",\n                children: \"Category: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                value: category_id,\n                onChange: e => setCategory_id(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select an Option\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 37\n                }, this), categoryData && categoryData.map((item, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item.id,\n                  children: item.name\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 45\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"type\",\n                children: \"Type: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                value: type,\n                onChange: e => setType(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"full time\",\n                  children: \"full time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"part time\",\n                  children: \"part time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"half time\",\n                  children: \"half time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-div\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: postJob,\n                className: \"button\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Create Job\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: closeModal,\n                className: \"button button-cancel\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminCustomJob, \"tv4zAvVJaw9pNmxgh8AdBRLKtEM=\");\n_c = AdminCustomJob;\nexport default AdminCustomJob;\nvar _c;\n$RefreshReg$(_c, \"AdminCustomJob\");","map":{"version":3,"names":["React","useEffect","useState","sampleIcon","AdminJobItem","fetchApiData","storeApiData","jsxDEV","_jsxDEV","openModal","modal","document","getElementsByClassName","style","display","closeModal","AdminCustomJob","_s","type","setType","category","setCategory","categoryData","setCategoryData","companyData","setCompanyData","iniateData","getCategory","categoryResponse","data","getCompany","companyResponse","company","company_id","setCompany_id","category_id","setCategory_id","jobTitle","setJobTitle","jobCloseDate","setJobCloseDate","jobType","setJobType","jobCount","setJobCount","jobTag","setJobTag","jobSalary","setJobSalary","jobDescription","setJobDescription","jobStatus","setJobStatus","postJob","createJob","then","response","console","log","catch","fetchState","setFetchState","jobData","setJobData","newJobDataFormat","setNewJobDataFormat","toLoadData","setToLoadData","currentPage","setCurrentPage","fetchJob","job","formatJobData","otherTempJobData","displayCount","totalPage","Math","ceil","length","page","leftFlag","rightFlag","tempJob","tempJobLength","movePage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","i","index","id","title","slug","icon","status","value","e","target","src","alt","htmlFor","onChange","name","placeholder","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/RECRUIT_MANAGEMENT/rms-react/src/components/admin/AdminJob/AdminCustomJob.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport sampleIcon from '../../../assets/images/default.png'\r\nimport AdminJobItem from '../AdminJob/AdminJobItem'\r\nimport { fetchApiData, storeApiData } from \"../../../api/api\";\r\n\r\nconst openModal = () => {\r\n    let modal = document.getElementsByClassName('modal-job')[0];\r\n    modal.style.display = 'block';\r\n}\r\n\r\nconst closeModal = () => {\r\n    let modal = document.getElementsByClassName('modal-job')[0];\r\n    modal.style.display = 'none';\r\n}\r\n\r\nconst AdminCustomJob = () => {\r\n    const [type, setType] = useState('full time');\r\n    const [category, setCategory] = useState('');\r\n\r\n    const [categoryData, setCategoryData] = useState([]);\r\n    const [companyData, setCompanyData] = useState([]);\r\n\r\n    const iniateData = async () => {\r\n        // const getCategory = async () => {\r\n        //     await fetchApiData(`loadCategory`)\r\n        //     .then((response) => console.log(response.data.category))\r\n        //     .then((response) => setCategoryData(response.data.category))\r\n        //     .catch((response) => console.log(response))\r\n        // }\r\n\r\n        // const getCompany = async () => {\r\n        //     await fetchApiData(`loadCompany`)\r\n        //     .then((response) => console.log(response.data.company))\r\n        //     .then((response) => setCompanyData(response.data.company))\r\n        //     .catch((response) => console.log(response))\r\n        // }\r\n        const getCategory = async () => {\r\n            const categoryResponse = await fetchApiData(`loadCategory`)\r\n            setCategoryData(categoryResponse.data.category)\r\n        }\r\n\r\n        const getCompany = async () => {\r\n            const companyResponse = await fetchApiData(`loadCompany`)\r\n            setCompanyData(companyResponse.data.company)\r\n        }\r\n\r\n        getCategory()\r\n        getCompany()\r\n    }\r\n\r\n    useEffect(() => {\r\n        iniateData()\r\n    }, [])\r\n\r\n    const [company_id, setCompany_id] = useState('')\r\n    const [category_id, setCategory_id] = useState('')\r\n    const [jobTitle, setJobTitle] = useState('')\r\n    const [jobCloseDate, setJobCloseDate] = useState('')\r\n    const [jobType, setJobType] = useState('')\r\n    const [jobCount, setJobCount] = useState('')\r\n    const [jobTag, setJobTag] = useState('')\r\n    const [jobSalary, setJobSalary] = useState('')\r\n    const [jobDescription, setJobDescription] = useState('')\r\n    const [jobStatus, setJobStatus] = useState('active')\r\n\r\n    const postJob = () => {\r\n        const createJob = async () => {\r\n            await storeApiData(`adminCreateJob`, { company_id, category_id, jobTitle, jobCloseDate, jobType, jobCount, jobTag, jobSalary, jobDescription, jobStatus })\r\n            .then((response)=>console.log(response.data))\r\n            .catch((response)=>console.log(response.data))\r\n        }\r\n\r\n        createJob()\r\n        closeModal()\r\n    }\r\n\r\n    const [fetchState, setFetchState] = useState(true);\r\n    const [jobData, setJobData] = useState([]);\r\n    const [newJobDataFormat, setNewJobDataFormat] = useState([]);\r\n    const [toLoadData, setToLoadData] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const fetchJob = async () => {\r\n        const response = await fetchApiData(`loadJob`)\r\n        setJobData(response.data.job)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setFetchState(false);\r\n        fetchJob()\r\n        // iniateData()\r\n        // console.log(jobData)\r\n    }, [fetchState])\r\n\r\n    function formatJobData() {\r\n        let otherTempJobData = [];\r\n        let displayCount = 4;\r\n        let totalPage = Math.ceil(jobData.length / displayCount);\r\n        let page = 0;\r\n\r\n        for (page; page < totalPage; page++) {\r\n            let leftFlag = page * displayCount;\r\n            let rightFlag = leftFlag + displayCount;\r\n\r\n            let tempJob = [];\r\n            let tempJobLength = 0;\r\n\r\n            for (leftFlag; leftFlag < rightFlag; leftFlag++) {\r\n                if (jobData[leftFlag] != null) {\r\n                    tempJob[tempJobLength] = jobData[leftFlag];\r\n                    ++tempJobLength;\r\n                }\r\n            }\r\n\r\n            otherTempJobData[page] = tempJob;\r\n        }\r\n\r\n        setNewJobDataFormat(otherTempJobData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        formatJobData()\r\n        // console.log(newJobDataFormat)\r\n        // console.log(\"a\")\r\n    }, [jobData])\r\n\r\n    function movePage() {\r\n        setToLoadData(newJobDataFormat[currentPage-1])\r\n        // console.log(toLoadData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        movePage()\r\n        // console.log(currentPage)\r\n        // console.log(toLoadData)\r\n    }, [jobData, currentPage])\r\n\r\n    // console.log(currentPage)\r\n    // console.log(toLoadData)\r\n\r\n    // function calculateToLoadData() {\r\n    //     // setToLoadData(jobData[1], jobData[2]);\r\n    //     setToLoadData(Array.prototype.concat(jobData[0], jobData[1], jobData[2], jobData[3]))\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     calculateToLoadData()\r\n    //     console.log(toLoadData)\r\n    // }, [jobData])\r\n\r\n    return (\r\n        <section className=\"admin\">\r\n            <div className=\"container\">\r\n                <div className=\"job-div\">\r\n                    <div className=\"info\">\r\n                        <h1>Job</h1>\r\n                        <div className='button-div'>\r\n                        <button type='button' onClick={openModal} className=\"button\">\r\n                            <div>\r\n                                {/* <img src='' alt='' height='15px' width='15px'/> */}\r\n                                <span>Add Job</span>\r\n                            </div>\r\n                        </button>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"job__wrapper\">\r\n                        {/* <AdminJobItem index={0}/>\r\n                        <AdminJobItem index={1}/> */}\r\n                        {\r\n                            // jobData.map((item, i) => (\r\n                            //     <AdminJobItem key={i} index={i} id={item.id} title={item.title} type={item.type} slug={item.slug} icon={item.icon} status={item.status} company={item.company[0]}/>\r\n                            // ))\r\n                        }\r\n                        {\r\n                            toLoadData && toLoadData.map((item, i) => (\r\n                                <AdminJobItem key={i} index={i} id={item.id} title={item.title} type={item.type} slug={item.slug} icon={item.icon} status={item.status} company={item.company[0]}/>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <div className=\"page__wrapper\">\r\n                        {/* <button type=\"button\" value={1} onClick={e => setCurrentPage(e.target.value)}>1</button>\r\n                        <button type=\"button\" value={2} onClick={e => setCurrentPage(e.target.value)}>2</button>\r\n                        <button type=\"button\" value={3} onClick={e => setCurrentPage(e.target.value)}>3</button>\r\n                        <button type=\"button\" value={4} onClick={e => setCurrentPage(e.target.value)}>4</button> */}\r\n                        {\r\n                            // toLoadData && toLoadData.map((item, i) => (\r\n                                //     <button type=\"button\" onClick={setCurrentPage(i+1)}>{i+1}</button>\r\n                            // ))\r\n                            // newJobDataFormat.map((item, i) => (\r\n                            //     <button type=\"button\" onClick={setCurrentPage(i+1)}>{i+1}</button>\r\n                            // ))\r\n                        }\r\n                        {\r\n                            newJobDataFormat && newJobDataFormat.map((item, i) => (\r\n                                <button type=\"button\" key={i} value={i+1} onClick={e => setCurrentPage(e.target.value)}>{i+1}</button>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    {/*  */}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"modal modal-job\">\r\n                <div className=\"modal-container\">\r\n                   <div className=\"photo\">\r\n                        <img src={sampleIcon} alt=\"sample\" />\r\n                    </div>\r\n                    <form>\r\n                        <div className=\"form\">\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"company\">Company: </label>\r\n                                <select className='form-control' value={company_id} onChange={(e)=>setCompany_id(e.target.value)}>\r\n                                    <option value=''>Select an Option</option>\r\n                                    {\r\n                                        companyData && companyData.map((item, i) => (\r\n                                            <option key={item.id} value={item.id}>{item.name}</option>\r\n                                        ))\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"title\">Title: </label>\r\n                                <input type=\"text\" value={jobTitle} onChange={(e)=>setJobTitle(e.target.value)} className='form-control' name=\"title\" placeholder='Job Title'/>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"tag\">Tag: </label>\r\n                                <input type=\"text\" value={jobTag} onChange={(e)=>setJobTag(e.target.value)} className='form-control' name=\"tag\" placeholder='Job Tag'/>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"count\">Count: </label>\r\n                                <input type=\"number\" value={jobCount} onChange={(e)=>setJobCount(e.target.value)} className='form-control' name=\"count\"  placeholder='People Needed'/>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"salary\">Salary: </label>\r\n                                <input type=\"text\" value={jobSalary} onChange={(e)=>setJobSalary(e.target.value)} className='form-control' name=\"salary\" placeholder='Job Salary'/>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"close_date\">Close Date: </label>\r\n                                <input type=\"date\" value={jobCloseDate} onChange={(e)=>setJobCloseDate(e.target.value)} className='form-control' name=\"close_date\" placeholder='close date'/>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"description\">Description: </label>\r\n                                <input type=\"text\" value={jobDescription} onChange={(e)=>setJobDescription(e.target.value)} className='form-control' name=\"address\" placeholder='Job Description'/>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"category\">Category: </label>\r\n                                <select className='form-control' value={category_id} onChange={(e)=>setCategory_id(e.target.value)}>\r\n                                    <option value=''>Select an Option</option>\r\n                                    {\r\n                                        categoryData && categoryData.map((item, i) => (\r\n                                            <option key={item.id} value={item.id}>{item.name}</option>\r\n                                        ))\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"type\">Type: </label>\r\n                                <select className='form-control' value={type} onChange={(e)=>setType(e.target.value)}>\r\n                                    <option value='full time'>full time</option>\r\n                                    <option value='part time'>part time</option>\r\n                                    <option value='half time'>half time</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='button-div'>\r\n                                <button type='button' onClick={postJob} className=\"button\">\r\n                                    <div>\r\n                                        {/* <img src='' alt='' height='15px' width='15px'/> */}\r\n                                        <span>Create Job</span>\r\n                                    </div>\r\n                                </button>\r\n                                <button type='button' onClick={closeModal} className=\"button button-cancel\">\r\n                                    <div>\r\n                                        {/* <img src='' alt='' height='15px' width='15px'/> */}\r\n                                        <span>Cancel</span>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AdminCustomJob"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}