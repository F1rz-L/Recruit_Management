{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\RECRUIT_MANAGEMENT\\\\rms-react\\\\src\\\\components\\\\user\\\\categories\\\\SameCategory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchApiData, storeApiData } from '../../../api/api';\nimport Loader from '../../../services/Loader';\nimport NavBar from '../pages/navigation/NavBar';\nimport JobDetailsItem from '../jobs/JobDetailsItem';\nimport Footer from '../footer/Footer';\nimport FeaturedJobItem from '../featured-jobs/FeaturedJobItem';\nimport FeaturedJob from '../featured-jobs/FeaturedJob';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SameCategory = () => {\n  _s();\n  const {\n    slug\n  } = useParams();\n  const [loader, setLoader] = useState(true);\n  const [job, setJob] = useState([]);\n  const [jobCount, setJobCount] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(0);\n  const totalPageArray = [];\n  const [pageArray, setPageArray] = useState([]);\n  const fetchJobs = async () => {\n    await storeApiData(`category/${slug}/${currentPage}`).then(response => {\n      setJob(response.data);\n      setTotalPage(response.data.totalPage);\n      setCurrentPage(response.data.currentPage);\n      setJobCount(response.data.jobCount);\n    }).catch(response => {});\n  };\n  useEffect(() => {\n    const fillData = () => {\n      for (let i = 1; i <= totalPage; i++) {\n        totalPageArray.push(i);\n      }\n    };\n    fillData();\n    // console.log(totalPageArray)\n    setPageArray(totalPageArray);\n  }, [totalPage]);\n  useEffect(() => {\n    // const fetchData = async () => {\n    // if (user) {\n    //     const formData = new FormData();\n    //     formData.append('user_id', user.id);\n    //     const response = await storeApiData(`home/browseJobs/${currentPage}`, { formData });\n    //     if (response.data) {\n    //         setJobs(response.data.jobs)\n    //         setTotalPage(response.data.totalPage)\n    //         setCurrentPage(response.data.currentPage)\n    //     }\n    // }else {\n    //     const response = await storeApiData(`home/browseJobs/${currentPage}`);\n    //     if (response.data) {\n    //         setJobs(response.data.jobs)\n    //         setTotalPage(response.data.totalPage)\n    //         setCurrentPage(response.data.currentPage)\n    //         // console.log(response.data)\n    //     }\n    // }\n    // if (response.status===true) {\n    //     setJobs(response.data);\n    // }else {\n    //     // console.log(response);\n    // }\n    // }\n    const getUser = async () => {\n      if (localStorage.getItem('token')) {\n        try {\n          const response = await axios.get('http://localhost:8000/auth/user-profile', {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          setUser(response === null || response === void 0 ? void 0 : response.data.data);\n        } catch (error) {\n          var _error$response;\n          console.log((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n        }\n      } else {\n        setUser('none');\n      }\n    };\n    getUser();\n    // fetchData();\n    // fetchCategory()s\n    setTimeout(() => {\n      setLoader(false);\n    }, 4000);\n  }, [currentPage]);\n\n  // useEffect(() => {\n  //     setTimeout(() => {\n  //         const fetchData = async() => {\n  //             const response = await fetchApiData(`categories/jobs/${slug}`);\n  //             if (response && response.status && response.status === true) {\n  //                 setJob(response.data);\n  //             }else {\n  //                 console.log(response);\n  //             }\n  //             setLoader(false);\n  //         };\n  //         fetchData();\n  //     }, 300);\n  // }, [slug]);\n  console.log(job && job);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loader ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        job: job.job,\n        cmp: \"jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), job.same && job.same ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(FeaturedJob, {\n          featured: job.same,\n          count: job.same.length,\n          similar: 'category',\n          name: job.categories.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 33\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-jobs\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Job not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"There is no job in this category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n_s(SameCategory, \"g4Peq1+8UEhdoPDJns7xhD6LZHI=\", false, function () {\n  return [useParams];\n});\n_c = SameCategory;\nexport default SameCategory;\nvar _c;\n$RefreshReg$(_c, \"SameCategory\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchApiData","storeApiData","Loader","NavBar","JobDetailsItem","Footer","FeaturedJobItem","FeaturedJob","jsxDEV","_jsxDEV","Fragment","_Fragment","SameCategory","_s","slug","loader","setLoader","job","setJob","jobCount","setJobCount","currentPage","setCurrentPage","totalPage","setTotalPage","totalPageArray","pageArray","setPageArray","fetchJobs","then","response","data","catch","fillData","i","push","getUser","localStorage","getItem","axios","get","headers","Authorization","setUser","error","_error$response","console","log","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","cmp","same","featured","count","length","similar","name","categories","className","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/RECRUIT_MANAGEMENT/rms-react/src/components/user/categories/SameCategory.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchApiData, storeApiData } from '../../../api/api';\r\nimport Loader from '../../../services/Loader';\r\nimport NavBar from '../pages/navigation/NavBar';\r\nimport JobDetailsItem from '../jobs/JobDetailsItem';\r\nimport Footer from '../footer/Footer';\r\nimport FeaturedJobItem from '../featured-jobs/FeaturedJobItem';\r\nimport FeaturedJob from '../featured-jobs/FeaturedJob';\r\n\r\nconst SameCategory = () => {\r\n    const {slug} = useParams();\r\n    const [loader, setLoader] = useState(true)\r\n    const [job, setJob] = useState([]);\r\n    const [jobCount, setJobCount] = useState(0)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const totalPageArray = []\r\n    const [pageArray, setPageArray] = useState([])\r\n\r\n    const fetchJobs = async () => {\r\n        await storeApiData(`category/${slug}/${currentPage}`)\r\n        .then((response) => { setJob(response.data); setTotalPage(response.data.totalPage); setCurrentPage(response.data.currentPage); setJobCount(response.data.jobCount) })\r\n        .catch((response) => {})\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fillData = () => {\r\n            for (let i = 1; i <= totalPage; i++) {\r\n                totalPageArray.push(i)\r\n            }\r\n        }\r\n\r\n        fillData()\r\n        // console.log(totalPageArray)\r\n        setPageArray(totalPageArray)\r\n    }, [totalPage])\r\n\r\n    useEffect(() => {\r\n        // const fetchData = async () => {\r\n            // if (user) {\r\n            //     const formData = new FormData();\r\n            //     formData.append('user_id', user.id);\r\n            //     const response = await storeApiData(`home/browseJobs/${currentPage}`, { formData });\r\n            //     if (response.data) {\r\n            //         setJobs(response.data.jobs)\r\n            //         setTotalPage(response.data.totalPage)\r\n            //         setCurrentPage(response.data.currentPage)\r\n            //     }\r\n            // }else {\r\n            //     const response = await storeApiData(`home/browseJobs/${currentPage}`);\r\n            //     if (response.data) {\r\n            //         setJobs(response.data.jobs)\r\n            //         setTotalPage(response.data.totalPage)\r\n            //         setCurrentPage(response.data.currentPage)\r\n            //         // console.log(response.data)\r\n            //     }\r\n            // }\r\n            // if (response.status===true) {\r\n            //     setJobs(response.data);\r\n            // }else {\r\n            //     // console.log(response);\r\n            // }\r\n        // }\r\n        const getUser = async () => {\r\n            if (localStorage.getItem('token')) {\r\n                try {\r\n                    const response = await axios.get('http://localhost:8000/auth/user-profile', {\r\n                        headers: {\r\n                            Authorization: `Bearer ${localStorage.getItem('token')}`, \r\n                        },\r\n                    });\r\n                    setUser(response?.data.data);\r\n                } catch (error) {\r\n                    console.log(error.response?.data);\r\n                }\r\n            }else {\r\n                setUser('none')\r\n            }\r\n        }\r\n        getUser();\r\n        // fetchData();\r\n        // fetchCategory()s\r\n        setTimeout(() => {\r\n            setLoader(false);\r\n        }, 4000)\r\n    }, [currentPage]);\r\n\r\n    // useEffect(() => {\r\n    //     setTimeout(() => {\r\n    //         const fetchData = async() => {\r\n    //             const response = await fetchApiData(`categories/jobs/${slug}`);\r\n    //             if (response && response.status && response.status === true) {\r\n    //                 setJob(response.data);\r\n    //             }else {\r\n    //                 console.log(response);\r\n    //             }\r\n    //             setLoader(false);\r\n    //         };\r\n    //         fetchData();\r\n    //     }, 300);\r\n    // }, [slug]);\r\n    console.log(job && job)\r\n    return (\r\n        <>\r\n            {loader ? (\r\n                <Loader />\r\n            ) : (\r\n                <>\r\n                    <NavBar job={job.job} cmp='jobs' />\r\n                    {\r\n                        job.same && job.same ? (\r\n                            <>\r\n                                <FeaturedJob featured={job.same} count={job.same.length} similar={'category'} name={job.categories.name} />\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <div className='no-jobs'>\r\n                                    <h1>Job not Found</h1>\r\n                                    <p>There is no job in this category</p>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n\r\n                    <Footer />\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SameCategory"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}