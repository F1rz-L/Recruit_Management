{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\RECRUIT_MANAGEMENT\\\\rms-react\\\\src\\\\components\\\\user\\\\categories\\\\SameCategory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchApiData, storeApiData } from '../../../api/api';\nimport Loader from '../../../services/Loader';\nimport NavBar from '../pages/navigation/NavBar';\nimport JobDetailsItem from '../jobs/JobDetailsItem';\nimport Footer from '../footer/Footer';\nimport FeaturedJobItem from '../featured-jobs/FeaturedJobItem';\nimport FeaturedJob from '../featured-jobs/FeaturedJob';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SameCategory = () => {\n  _s();\n  const {\n    slug\n  } = useParams();\n  const [loader, setLoader] = useState(true);\n  const [user, setUser] = useState([]);\n  const [job, setJob] = useState([]);\n  const [jobCount, setJobCount] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(0);\n  const totalPageArray = [];\n  const [pageArray, setPageArray] = useState([]);\n  const pageObjects = {\n    jobCount: jobCount,\n    currentPage: currentPage,\n    totalPage: totalPage\n  };\n  const fetchJobs = async () => {\n    await storeApiData(`category/${slug}/${currentPage}`).then(response => {\n      setJob(response.data);\n      setTotalPage(response.data.totalPage);\n      setCurrentPage(response.data.currentPage);\n      setJobCount(response.data.jobCount);\n    }).catch(response => {});\n  };\n  useEffect(() => {\n    const fillData = () => {\n      for (let i = 1; i <= totalPage; i++) {\n        totalPageArray.push(i);\n      }\n    };\n    fillData();\n    // console.log(totalPageArray)\n    setPageArray(totalPageArray);\n  }, [totalPage]);\n  useEffect(() => {\n    const checkUser = () => {\n      if (user !== 'no') {\n        // if (user !== 'none') {\n        const formData = new FormData();\n        formData.append('user_id', user.id);\n        fetchData(formData);\n      } else {\n        fetchData(null);\n      }\n    };\n    const fetchData = async formData => {\n      const response = await storeApiData(`category/jobs/${slug}/${currentPage}`, formData);\n      if (response.data) {\n        setJob(response.data);\n        setTotalPage(response.data.totalPage);\n        setCurrentPage(response.data.currentPage);\n        setJobCount(response.data.jobCount);\n      }\n    };\n    checkUser();\n  }, [user, currentPage]);\n  useEffect(() => {\n    const getUser = async () => {\n      if (localStorage.getItem('token')) {\n        try {\n          const response = await axios.get('http://localhost:8000/auth/user-profile', {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          setUser(response === null || response === void 0 ? void 0 : response.data.data);\n        } catch (error) {\n          var _error$response;\n          console.log((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n        }\n      } else {\n        setUser('none');\n      }\n    };\n    getUser();\n    // fetchData();\n    // fetchCategory()s\n    setTimeout(() => {\n      setLoader(false);\n    }, 4000);\n  }, [currentPage]);\n\n  // useEffect(() => {\n  //     setTimeout(() => {\n  //         const fetchData = async() => {\n  //             const response = await fetchApiData(`categories/jobs/${slug}`);\n  //             if (response && response.status && response.status === true) {\n  //                 setJob(response.data);\n  //             }else {\n  //                 console.log(response);\n  //             }\n  //             setLoader(false);\n  //         };\n  //         fetchData();\n  //     }, 300);\n  // }, [slug]);\n  console.log(job && job);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loader ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        job: job.job,\n        cmp: \"jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), job.same && job.same ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(FeaturedJob, {\n          featured: job.same,\n          count: job.same.length,\n          similar: 'category',\n          name: job.categories.name,\n          pageObjects: pageObjects\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 33\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-jobs\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Job not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"There is no job in this category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 33\n        }, this)\n      }, void 0, false), job.same && job.same ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"pageArray && pageArray.map((item, i) => (\", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          value: item,\n          onClick: e => setCurrentPage(e.target.value),\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 33\n        }, this), \"))\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n_s(SameCategory, \"MT/H2zNsRBgmWTlOU98GW7rd5D8=\", false, function () {\n  return [useParams];\n});\n_c = SameCategory;\nexport default SameCategory;\nvar _c;\n$RefreshReg$(_c, \"SameCategory\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchApiData","storeApiData","Loader","NavBar","JobDetailsItem","Footer","FeaturedJobItem","FeaturedJob","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SameCategory","_s","slug","loader","setLoader","user","setUser","job","setJob","jobCount","setJobCount","currentPage","setCurrentPage","totalPage","setTotalPage","totalPageArray","pageArray","setPageArray","pageObjects","fetchJobs","then","response","data","catch","fillData","i","push","checkUser","formData","FormData","append","id","fetchData","getUser","localStorage","getItem","get","headers","Authorization","error","_error$response","console","log","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","cmp","same","featured","count","length","similar","name","categories","className","type","value","item","onClick","e","target","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/RECRUIT_MANAGEMENT/rms-react/src/components/user/categories/SameCategory.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchApiData, storeApiData } from '../../../api/api';\r\nimport Loader from '../../../services/Loader';\r\nimport NavBar from '../pages/navigation/NavBar';\r\nimport JobDetailsItem from '../jobs/JobDetailsItem';\r\nimport Footer from '../footer/Footer';\r\nimport FeaturedJobItem from '../featured-jobs/FeaturedJobItem';\r\nimport FeaturedJob from '../featured-jobs/FeaturedJob';\r\nimport axios from 'axios';\r\n\r\nconst SameCategory = () => {\r\n    const {slug} = useParams();\r\n    const [loader, setLoader] = useState(true)\r\n    const [user, setUser] = useState([]);\r\n    const [job, setJob] = useState([]);\r\n    const [jobCount, setJobCount] = useState(0)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const totalPageArray = []\r\n    const [pageArray, setPageArray] = useState([])\r\n\r\n    const pageObjects = {\r\n        jobCount: jobCount, \r\n        currentPage: currentPage, \r\n        totalPage: totalPage,\r\n    };\r\n\r\n    const fetchJobs = async () => {\r\n        await storeApiData(`category/${slug}/${currentPage}`)\r\n        .then((response) => { setJob(response.data); setTotalPage(response.data.totalPage); setCurrentPage(response.data.currentPage); setJobCount(response.data.jobCount) })\r\n        .catch((response) => {})\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fillData = () => {\r\n            for (let i = 1; i <= totalPage; i++) {\r\n                totalPageArray.push(i)\r\n            }\r\n        }\r\n\r\n        fillData()\r\n        // console.log(totalPageArray)\r\n        setPageArray(totalPageArray)\r\n    }, [totalPage])\r\n\r\n    useEffect(() => {\r\n        const checkUser = () => {\r\n            if (user !== 'no') {\r\n            // if (user !== 'none') {\r\n                const formData = new FormData();\r\n                formData.append('user_id', user.id);\r\n                \r\n                fetchData(formData)\r\n            }else {\r\n                fetchData(null)\r\n            }\r\n        }\r\n        const fetchData = async (formData) => {\r\n            const response = await storeApiData(`category/jobs/${slug}/${currentPage}`, formData);\r\n            if (response.data) {\r\n                setJob(response.data)\r\n                setTotalPage(response.data.totalPage)\r\n                setCurrentPage(response.data.currentPage)\r\n                setJobCount(response.data.jobCount)\r\n            }\r\n        }\r\n        checkUser()\r\n    }, [user, currentPage])\r\n\r\n    useEffect(() => {\r\n        const getUser = async () => {\r\n            if (localStorage.getItem('token')) {\r\n                try {\r\n                    const response = await axios.get('http://localhost:8000/auth/user-profile', {\r\n                        headers: {\r\n                            Authorization: `Bearer ${localStorage.getItem('token')}`, \r\n                        },\r\n                    });\r\n                    setUser(response?.data.data);\r\n                } catch (error) {\r\n                    console.log(error.response?.data);\r\n                }\r\n            }else {\r\n                setUser('none')\r\n            }\r\n        }\r\n        getUser();\r\n        // fetchData();\r\n        // fetchCategory()s\r\n        setTimeout(() => {\r\n            setLoader(false);\r\n        }, 4000)\r\n    }, [currentPage]);\r\n\r\n    // useEffect(() => {\r\n    //     setTimeout(() => {\r\n    //         const fetchData = async() => {\r\n    //             const response = await fetchApiData(`categories/jobs/${slug}`);\r\n    //             if (response && response.status && response.status === true) {\r\n    //                 setJob(response.data);\r\n    //             }else {\r\n    //                 console.log(response);\r\n    //             }\r\n    //             setLoader(false);\r\n    //         };\r\n    //         fetchData();\r\n    //     }, 300);\r\n    // }, [slug]);\r\n    console.log(job && job)\r\n    return (\r\n        <>\r\n            {loader ? (\r\n                <Loader />\r\n            ) : (\r\n                <>\r\n                    <NavBar job={job.job} cmp='jobs' />\r\n                    {\r\n                        job.same && job.same ? (\r\n                            <>\r\n                                {/* <p>Page {currentPage} of {totalPage} with total of {jobCount} jobs</p> */}\r\n                                <FeaturedJob featured={job.same} count={job.same.length} similar={'category'} name={job.categories.name} pageObjects={pageObjects} />\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <div className='no-jobs'>\r\n                                    <h1>Job not Found</h1>\r\n                                    <p>There is no job in this category</p>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                    {\r\n                        job.same && job.same ? (\r\n                            <>\r\n                                pageArray && pageArray.map((item, i) => (\r\n                                <button type='button' value={item} onClick={(e) => setCurrentPage(e.target.value)}>{item}</button>\r\n                                ))\r\n                            </>\r\n                        ) : (\r\n                            <></>\r\n                        )\r\n                    }\r\n\r\n                    <Footer />\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SameCategory"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}