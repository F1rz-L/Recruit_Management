{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\RECRUIT_MANAGEMENT\\\\rms-react\\\\src\\\\components\\\\user\\\\pages\\\\authentication\\\\SignUpItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { storeApiData } from '../../../../api/api';\nimport Loader from '../../../../services/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUpItem = () => {\n  _s();\n  const [loader, setLoader] = useState(false);\n  const [tokenData, setTokenData] = useState('');\n  const [userData, setUserData] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [role, setRole] = useState('job seeker');\n  const [registerResponse, setRegisterResponse] = useState('');\n  const [emailMsg, setEmailMsg] = useState('');\n  const [passwordMsg, setPasswordMsg] = useState('');\n  const registerHandler = () => {\n    setLoader(true);\n    const validation = () => {\n      if (name === '' || email === '' || password === '' || confirmPassword === '') {\n        setLoader(false);\n        setPasswordMsg(\"All field must be filled first!\");\n        return;\n      }\n      if (password !== confirmPassword) {\n        setLoader(false);\n        setPasswordMsg(\"Password and confirm password are not same\");\n        return;\n      }\n      register();\n    };\n    const register = async () => {\n      await storeApiData(`auth/register`, {\n        name,\n        email,\n        password,\n        confirmPassword,\n        role\n      }).then(response => {\n        setRegisterResponse(response);\n        console.log(response);\n        console.log(registerResponse);\n      }).catch(response => {\n        console.log(response);\n      });\n    };\n    setRegisterResponse('');\n    setEmailMsg('');\n    setPasswordMsg('');\n    validation();\n  };\n  useEffect(() => {\n    proccessData();\n  }, [registerResponse]);\n  const proccessData = () => {\n    const moreValidation = () => {\n      if (registerResponse === 'Email taken') {\n        setLoader(false);\n        setEmailMsg('Email already been taken');\n        return;\n      } else if (registerResponse === 'Name between') {\n        setLoader(false);\n        setEmailMsg('Name must be up to 2 until 100 characters');\n        return;\n      } else if (registerResponse === 'Password min') {\n        setLoader(false);\n        setPasswordMsg('Password must be at least 6 character');\n        return;\n      }\n      fillUserData();\n    };\n    const fillUserData = () => {\n      var _registerResponse$dat, _registerResponse$dat2, _registerResponse$dat3;\n      setUserData((_registerResponse$dat = registerResponse.data) === null || _registerResponse$dat === void 0 ? void 0 : _registerResponse$dat.user);\n      setTokenData((_registerResponse$dat2 = registerResponse.data) === null || _registerResponse$dat2 === void 0 ? void 0 : _registerResponse$dat2.token);\n      if ((_registerResponse$dat3 = registerResponse.data) !== null && _registerResponse$dat3 !== void 0 && _registerResponse$dat3.token) {\n        var _registerResponse$dat4;\n        localStorage.setItem('token', (_registerResponse$dat4 = registerResponse.data) === null || _registerResponse$dat4 === void 0 ? void 0 : _registerResponse$dat4.token);\n      }\n      localStorage.setItem('role', role);\n    };\n    moreValidation();\n  };\n  useEffect(() => {\n    directUser();\n  }, [userData]);\n  const directUser = () => {\n    if ((userData === null || userData === void 0 ? void 0 : userData.verify) === 0) {\n      localStorage.setItem('slug', userData.slug);\n      window.location = '/verify';\n      return;\n    }\n    if ((userData === null || userData === void 0 ? void 0 : userData.role) === 'company') {\n      window.location = `/company/${userData.slug}`;\n    } else if ((userData === null || userData === void 0 ? void 0 : userData.role) === 'job seeker') {\n      window.location = `/user/${userData.slug}`;\n    }\n  };\n\n  // const toggleEmailMsg = (state) => {\n  //     let emailMsg = document.getElementsByClassName('email-msg')[0];\n  //     emailMsg.style.visiblity = state;\n  // }\n\n  // const registerHandler = () => {\n  //     function mockAPICall(id) {\n  //         return new Promise((resolve, reject) => {\n  //             setTimeout(() => {\n  //                 resolve(`Response from API with ID ${id}`);\n  //             }, 1000); // Simulate delay of 1 second\n  //         });\n  //     }\n\n  //     const register = () => {\n  //         storeApiData(`auth/register`, {name, email, password, confirmPassword, role})\n  //         .then((response)=>{console.log(response);localStorage.setItem('token', response.data.token); setTokenData(response.data.token); setUserData(response.data.user);})\n  //         .then(localStorage.setItem('role', role))\n  //         .catch((response)=>console.log(response.data))\n  //         // .then((response)=>{console.log(userData)})\n  //         // .then((response)=>{setUserData(response)})\n  //     }\n\n  //     console.log(userData)\n\n  //     const chainRegisterCall = () => {\n  //         mockAPICall(1)\n  //         .then(response1 => {\n  //             // setEmailMsg('')\n  //             // setPasswordMsg('')\n  //             // toggleEmailMsg('hidden')\n  //             if (password !== confirmPassword) {\n  //                 // alert('password and confirm password not same')\n  //                 setPasswordMsg('Password and confirm password are not same')\n  //                 return\n  //             }\n  //         })\n  //         .then(response2 => {\n  //             // return register()\n  //             return register()\n  //         })\n  //         .then(response3 => {\n  //             if (registerResponse === 'Email taken') {\n  //                 // console.log('email already been taken')\n  //                 setEmailMsg('Email Already Been Taken')\n  //                 // toggleEmailMsg('visible')\n  //                 return\n  //             }else {\n  //                 // setEmailMsg(registerResponse.data)\n  //                 // console.log(registerResponse.data?.user) 1 step before\n  //                 // setUserData(registerResponse.data?.user);\n  //                 // setTokenData(registerResponse.data.token); \n  //                 // localStorage.setItem('token', registerResponse.data.token); \n  //             }\n  //         })\n  //         .catch(error => {\n  //             console.error('Error:', error);\n  //         });\n  //     }\n\n  //     // localStorage.clear()\n\n  //     setEmailMsg('')\n  //     setPasswordMsg('')\n  //     setRegisterResponse('')\n\n  //     chainRegisterCall()\n  // }\n\n  // const checkRole = async () => {\n  //     if (userData.verify === 0) {\n  //         localStorage.setItem('slug', userData.slug);\n  //         window.location = '/verify';\n  //         return;\n  //     }\n\n  //     if (userData.role === 'company') {\n  //         window.location = `/company/${userData.slug}`\n  //     }else if (userData.role === 'job seeker') {\n  //         window.location = `/user/${userData.slug}`\n  //     }\n  // }\n\n  // //change page\n  // useEffect(() => {\n  //     checkRole()\n  //     // console.log(userData) userData is 1 step before\n  // }, [userData])\n\n  // // useEffect(() => {\n  // //     console.log(name);\n  // //     console.log(email);\n  // //     console.log(password);\n  // //     console.log(confirmPassword);\n  // //     console.log(role);\n  // // }, [name, email, password, confirmPassword, role])\n  // const [loader, setLoader] = useState(true);\n  // useEffect(() => {\n  //     setTimeout(() => {\n  //         setLoader(false);\n  //     }, 300)\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loader ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-div\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"username\",\n                  children: \"Username: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  name: \"name\",\n                  placeholder: \"Username\",\n                  value: name,\n                  onChange: e => setName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control\",\n                  name: \"email\",\n                  placeholder: \"Email\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"auth-error email-msg\",\n                children: emailMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  name: \"password\",\n                  placeholder: \"Password\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"confirm_password\",\n                  children: \"Confirm Password: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  name: \"confirm_password\",\n                  placeholder: \"Confirm Password\",\n                  value: confirmPassword,\n                  onChange: e => setConfirmPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"auth-error password-msg\",\n                children: passwordMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-row-radio\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Who you are?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    className: \"radio\",\n                    value: \"job seeker\",\n                    checked: role === 'job seeker',\n                    onChange: e => setRole(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"role\",\n                    children: \"Job Seeker\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    className: \"radio\",\n                    value: \"company\",\n                    checked: role === 'company',\n                    onChange: e => setRole(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"role\",\n                    children: \"Company\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                type: \"button\",\n                onClick: registerHandler,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Sign Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"forgot\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/login\",\n                  children: \"already have an account?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(SignUpItem, \"dKwBmjkk4qtrJX/VuaqvR8UMXlI=\");\n_c = SignUpItem;\nexport default SignUpItem;\nvar _c;\n$RefreshReg$(_c, \"SignUpItem\");","map":{"version":3,"names":["React","useEffect","useState","Link","storeApiData","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUpItem","_s","loader","setLoader","tokenData","setTokenData","userData","setUserData","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","role","setRole","registerResponse","setRegisterResponse","emailMsg","setEmailMsg","passwordMsg","setPasswordMsg","registerHandler","validation","register","then","response","console","log","catch","proccessData","moreValidation","fillUserData","_registerResponse$dat","_registerResponse$dat2","_registerResponse$dat3","data","user","token","_registerResponse$dat4","localStorage","setItem","directUser","verify","slug","window","location","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","placeholder","value","onChange","e","target","checked","onClick","to","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/RECRUIT_MANAGEMENT/rms-react/src/components/user/pages/authentication/SignUpItem.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { storeApiData } from '../../../../api/api'\r\nimport Loader from '../../../../services/Loader';\r\n\r\nconst SignUpItem = () => {\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [tokenData, setTokenData] = useState('')\r\n    const [userData, setUserData] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [role, setRole] = useState('job seeker')\r\n\r\n    const [registerResponse, setRegisterResponse] = useState('')\r\n    const [emailMsg, setEmailMsg] = useState('')\r\n    const [passwordMsg, setPasswordMsg] = useState('')\r\n\r\n    const registerHandler = () => {\r\n        setLoader(true)\r\n        const validation = () => {\r\n            if (name === '' || email === '' || password === '' || confirmPassword === '') {\r\n                setLoader(false)\r\n                setPasswordMsg(\"All field must be filled first!\")\r\n                return;\r\n            }\r\n\r\n            if (password !== confirmPassword) {\r\n                setLoader(false)\r\n                setPasswordMsg(\"Password and confirm password are not same\")\r\n                return;\r\n            }\r\n\r\n            register()\r\n        }\r\n\r\n        const register = async () => {\r\n            await storeApiData(`auth/register`, {name, email, password, confirmPassword, role})\r\n            .then((response) => {setRegisterResponse(response); console.log(response); console.log(registerResponse)})\r\n            .catch((response) => {console.log(response)})\r\n        }\r\n\r\n        setRegisterResponse('')\r\n        setEmailMsg('')\r\n        setPasswordMsg('')\r\n        validation()\r\n    }\r\n\r\n    useEffect(() => {\r\n        proccessData()\r\n    }, [registerResponse])\r\n\r\n    const proccessData = () => {\r\n        const moreValidation = () => {\r\n            if (registerResponse === 'Email taken') {\r\n                setLoader(false)\r\n                setEmailMsg('Email already been taken')\r\n                return;\r\n            }\r\n            else if (registerResponse === 'Name between') {\r\n                setLoader(false)\r\n                setEmailMsg('Name must be up to 2 until 100 characters')\r\n                return;\r\n            }\r\n            else if (registerResponse === 'Password min') {\r\n                setLoader(false)\r\n                setPasswordMsg('Password must be at least 6 character')\r\n                return;\r\n            }\r\n\r\n            fillUserData()\r\n        }\r\n\r\n        const fillUserData = () => {\r\n            setUserData(registerResponse.data?.user)\r\n            setTokenData(registerResponse.data?.token)\r\n\r\n            if (registerResponse.data?.token) {\r\n                localStorage.setItem('token', registerResponse.data?.token)\r\n            }\r\n            localStorage.setItem('role', role)\r\n        }\r\n\r\n        moreValidation()\r\n    }\r\n\r\n    useEffect(() => {\r\n        directUser()\r\n    }, [userData])\r\n\r\n    const directUser = () => {\r\n        if (userData?.verify === 0) {\r\n            localStorage.setItem('slug', userData.slug);\r\n            window.location = '/verify';\r\n            return;\r\n        }\r\n        \r\n        if (userData?.role === 'company') {\r\n            window.location = `/company/${userData.slug}`\r\n        }else if (userData?.role === 'job seeker') {\r\n            window.location = `/user/${userData.slug}`\r\n        }\r\n    }\r\n\r\n    // const toggleEmailMsg = (state) => {\r\n    //     let emailMsg = document.getElementsByClassName('email-msg')[0];\r\n    //     emailMsg.style.visiblity = state;\r\n    // }\r\n\r\n    // const registerHandler = () => {\r\n    //     function mockAPICall(id) {\r\n    //         return new Promise((resolve, reject) => {\r\n    //             setTimeout(() => {\r\n    //                 resolve(`Response from API with ID ${id}`);\r\n    //             }, 1000); // Simulate delay of 1 second\r\n    //         });\r\n    //     }\r\n        \r\n    //     const register = () => {\r\n    //         storeApiData(`auth/register`, {name, email, password, confirmPassword, role})\r\n    //         .then((response)=>{console.log(response);localStorage.setItem('token', response.data.token); setTokenData(response.data.token); setUserData(response.data.user);})\r\n    //         .then(localStorage.setItem('role', role))\r\n    //         .catch((response)=>console.log(response.data))\r\n    //         // .then((response)=>{console.log(userData)})\r\n    //         // .then((response)=>{setUserData(response)})\r\n    //     }\r\n\r\n    //     console.log(userData)\r\n\r\n    //     const chainRegisterCall = () => {\r\n    //         mockAPICall(1)\r\n    //         .then(response1 => {\r\n    //             // setEmailMsg('')\r\n    //             // setPasswordMsg('')\r\n    //             // toggleEmailMsg('hidden')\r\n    //             if (password !== confirmPassword) {\r\n    //                 // alert('password and confirm password not same')\r\n    //                 setPasswordMsg('Password and confirm password are not same')\r\n    //                 return\r\n    //             }\r\n    //         })\r\n    //         .then(response2 => {\r\n    //             // return register()\r\n    //             return register()\r\n    //         })\r\n    //         .then(response3 => {\r\n    //             if (registerResponse === 'Email taken') {\r\n    //                 // console.log('email already been taken')\r\n    //                 setEmailMsg('Email Already Been Taken')\r\n    //                 // toggleEmailMsg('visible')\r\n    //                 return\r\n    //             }else {\r\n    //                 // setEmailMsg(registerResponse.data)\r\n    //                 // console.log(registerResponse.data?.user) 1 step before\r\n    //                 // setUserData(registerResponse.data?.user);\r\n    //                 // setTokenData(registerResponse.data.token); \r\n    //                 // localStorage.setItem('token', registerResponse.data.token); \r\n    //             }\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.error('Error:', error);\r\n    //         });\r\n    //     }\r\n\r\n    //     // localStorage.clear()\r\n\r\n    //     setEmailMsg('')\r\n    //     setPasswordMsg('')\r\n    //     setRegisterResponse('')\r\n\r\n    //     chainRegisterCall()\r\n    // }\r\n\r\n    // const checkRole = async () => {\r\n    //     if (userData.verify === 0) {\r\n    //         localStorage.setItem('slug', userData.slug);\r\n    //         window.location = '/verify';\r\n    //         return;\r\n    //     }\r\n\r\n    //     if (userData.role === 'company') {\r\n    //         window.location = `/company/${userData.slug}`\r\n    //     }else if (userData.role === 'job seeker') {\r\n    //         window.location = `/user/${userData.slug}`\r\n    //     }\r\n    // }\r\n\r\n    // //change page\r\n    // useEffect(() => {\r\n    //     checkRole()\r\n    //     // console.log(userData) userData is 1 step before\r\n    // }, [userData])\r\n\r\n    // // useEffect(() => {\r\n    // //     console.log(name);\r\n    // //     console.log(email);\r\n    // //     console.log(password);\r\n    // //     console.log(confirmPassword);\r\n    // //     console.log(role);\r\n    // // }, [name, email, password, confirmPassword, role])\r\n    // const [loader, setLoader] = useState(true);\r\n    // useEffect(() => {\r\n    //     setTimeout(() => {\r\n    //         setLoader(false);\r\n    //     }, 300)\r\n    // }, []);\r\n    return (\r\n        <>\r\n            {loader ? (\r\n                <Loader />\r\n            ) : (\r\n        <section className='login'>\r\n            <div className=\"container\">\r\n                <div className=\"auth-div\">\r\n                    <form>\r\n                        <div className=\"form\">\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"username\">Username: </label>\r\n                                <input type=\"text\" className='form-control' name=\"name\" placeholder='Username' value={name} onChange={(e) => setName(e.target.value)}/>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"email\">Email: </label>\r\n                                <input type=\"email\" className='form-control' name=\"email\" placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                            </div>\r\n                            <p className='auth-error email-msg'>{emailMsg}</p>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"password\">Password: </label>\r\n                                <input type=\"password\" className='form-control' name=\"password\" placeholder='Password' value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                            </div>\r\n                            <div className='form-row'>\r\n                                <label htmlFor=\"confirm_password\">Confirm Password: </label>\r\n                                <input type=\"password\" className='form-control' name=\"confirm_password\" placeholder='Confirm Password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n                            </div>\r\n                            <p className='auth-error password-msg'>{passwordMsg}</p>\r\n                            <div className='form-row-radio'>\r\n                                <h3>Who you are?</h3>\r\n                                <div className=\"form-row\">\r\n                                    <input type=\"radio\" className='radio' value='job seeker' checked={role === 'job seeker'} onChange={(e) => setRole(e.target.value)}/>\r\n                                    <label htmlFor=\"role\">Job Seeker</label>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <input type=\"radio\" className='radio' value='company' checked={role === 'company'} onChange={(e) => setRole(e.target.value)}/>\r\n                                    <label htmlFor=\"role\">Company</label>\r\n                                </div>\r\n                                {/* <label htmlFor=\"role\"> */}\r\n                                {/* </label> */}\r\n                                {/* <label htmlFor=\"role\"> */}\r\n                                {/* </label> */}\r\n                            </div>\r\n                            <button className=\"button\" type='button' onClick={registerHandler}>\r\n                                <div>\r\n                                    {/* <img src='' alt='' height='15px' width='15px'/> */}\r\n                                    <span>Sign Up</span>\r\n                                </div>\r\n                            </button>\r\n                            <div className=\"forgot\">\r\n                                <Link to='/login'>already have an account?</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignUpItem"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}